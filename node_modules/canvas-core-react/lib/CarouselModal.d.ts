import * as React from 'react';

export interface CarouselModalItems {
    image: string;
    title: string;
    description: React.ReactNode;
}

export type CarouselModalCloseButtonType = "light" | "dark";

export interface CarouselModalProps {
    /**
     * Optional classes can be added
     */
    className?: string;
    /**
     * image
     */
    items: CarouselModalItems[];
    /**
     * Screenreader label for close button
     */
    closeButtonLabel: string;
    /**
     * Function that is called when close button is clicked
     */
    handleCloseButton?: (...args: any[])=>any;
    /**
     * Function that is called when submit button is clicked
     */
    handleSubmit?: (...args: any[])=>any;
    /**
     * Function that is called when continue button is clicked
     */
    handleContinueButton?: (...args: any[])=>any;
    /**
     * Define the visibility for the carousel Modal
     */
    isCarouselVisible: boolean;
    /**
     * Function to change the visibility of carousel Modal state
     */
    setCarouselVisible: (...args: any[])=>any;
    /**
     * Function to be executed when the user clicks outside of the carousel modal to close it (the overlay)
     */
    onOverlayClick?: (...args: any[])=>any;
    /**
     * Continue button label
     */
    continueButtonText: string;
    /**
     * option to chose the closebutton style based on the image
     */
    closeButtonType?: CarouselModalCloseButtonType;
    /**
     * Submit button label
     */
    submitButtonText: string;
    /**
     * the element to which the focus has to return after carousel modal close like document.activeElement
     */
    originElement: Object;
    /**
     * locale content for pagination dot aria label
     */
    ariaLocale?: any;
}

declare const CarouselModal: React.FC<CarouselModalProps>;

export default CarouselModal;

