import * as React from 'react';

export interface CheckboxError {
    label: string;
    message: string;
}

export type CheckboxInputRef = ((...args: any[])=>any) | Object;

export type CheckboxTooltip = React.ReactNode | Object;

export type CheckboxLabelWeight = "regular" | "bold";

export interface CheckboxProps {
    /**
     * Set the checked state of the checkbox in controlled component
     */
    checked?: any;
    /**
     * Sets the default checked state of the checkbox in an uncontrolled component
     */
    defaultChecked?: any;
    /**
     * Optional classes can be added
     */
    className?: string;
    /**
     * Set the checkbox to the disabled state
     */
    disabled?: boolean;
    /**
     * Sets the Checkbox to the error state
     */
    error?: CheckboxError;
    /**
     * Set the id of the input tag
     */
    id: string;
    /**
     * Set the label of the checkbox
     */
    label: React.ReactNode;
    /**
     * Ref to access dom node
     */
    inputRef?: CheckboxInputRef;
    /**
     * If checkbox needs more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: CheckboxTooltip;
    /**
     * Optional onChange function
     */
    onChange?: (...args: any[])=>any;
    /**
     * Set to true if being used as a parent of nested checkboxes (for indeterminate checkbox usage)
     */
    parent?: boolean;
    /**
     * bolds label
     */
    labelWeight?: CheckboxLabelWeight;
    /**
     * customization of checkbox color
     */
    checkColor?: string;
}

declare const Checkbox: React.FC<CheckboxProps>;

export default Checkbox;

