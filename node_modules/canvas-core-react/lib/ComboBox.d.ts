import * as React from 'react';

export interface ComboBoxOptions {
    code: string;
    value: string;
}

export interface ComboBoxError {
    label: string;
    message?: string;
}

export type ComboBoxTooltip = React.ReactNode | Object;

export interface ComboBoxProps {
    /**
     * id on the input element, also used for htmlFor on the label
     */
    id: string;
    /**
     * Label to be associated with the input element (for screenreaders)
     */
    label: string;
    /**
     * Optional className on the input element
     */
    className?: string;
    /**
     * Whether or not the input field is disabled
     */
    disabled?: boolean;
    /**
     * Optional  value set in the input element, based on the options in the datalist
     */
    value?: string;
    /**
     * The name attribute on the input element
     */
    name: string;
    /**
     * Placeholder text for the input element
     */
    placeholder?: string;
    /**
     * Optional secondary label di
     * /** Optional secondary label displayed beside the primary label
     */
    secondaryLabel?: string;
    /**
     * options for the list box
     */
    options: ComboBoxOptions[];
    /**
     * onChange function for when the input element is updated.
     * First parameter is the event that triggers the change and it will be null when user clicks ESCAPE key.
     * Second parameter is the option (object has properties code and value) selected from the list box and it
     * take priority over event.target.value
     */
    onChange: (...args: any[])=>any;
    /**
     * shows error state for the component
     */
    error?: ComboBoxError;
    /**
     * If field needs more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: ComboBoxTooltip;
    /**
     * Custom filter function for the options. By default, only options have values that start with the characters
     * typed in the input will be displayed. This filter function should take two parameters and return a boolean like following default filter:
     * (target, filterOn) => target.toLowerCase().startsWith(filterOn.toLowerCase());
     */
    customFilter?: (...args: any[])=>any;
    /**
     * Optional light background behind input
     */
    withBackground?: boolean;
}

declare const ComboBox: React.FC<ComboBoxProps>;

export default ComboBox;

