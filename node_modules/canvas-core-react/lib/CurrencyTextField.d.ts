import * as React from 'react';

export type CurrencyTextFieldTooltip = React.ReactNode | Object;

export interface CurrencyTextFieldError {
    label?: string;
    messages?: string[];
}

export type CurrencyTextFieldCurrencyFormat = "CAD-EN" | "CAD-FR" | "USD-EN" | "USD-FR" | "EUR-EN" | "EUR-FR" | "ES-MXN" | "ES-PEN" | "ES-COP" | "ES-CL" | "INR";

export type CurrencyTextFieldSupplementaryText = string | React.ReactNode;

export interface CurrencyTextFieldConfig {
    prefix?: string;
    suffix?: string;
    decimalSymbol: string;
    allowDecimal?: boolean;
    thousandsSeparatorSymbol: string;
    allowNegative?: boolean;
}

export interface CurrencyTextFieldSelector {
    id: string;
    name: string;
    options: {
        value: string;
        option: string;
    }[];
    label: string;
    onChange?: (...args: any[])=>any;
    value?: string;
    placeholder: string;
    error?: {
        label?: string;
        messages?: string[];
    };
}

export type CurrencyTextFieldCurrencyRef = ((...args: any[])=>any) | Object;

export interface CurrencyTextFieldFlag {
    countryCode: string;
    ariaLabel: string;
}

export interface CurrencyTextFieldProps {
    /**
     * id for the CurrencyTextField field
     */
    id: string;
    /**
     * Label to be associated with the CurrencyTextField
     */
    label: string;
    /**
     * Optional secondary label displayed beside the primary label
     */
    secondaryLabel?: string;
    /**
     * If field needs more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: CurrencyTextFieldTooltip;
    /**
     * Sets the error state and the error messages that will be displayed.
     */
    error?: CurrencyTextFieldError;
    /**
     * Optional callback function triggered when the CurrencyTextField is updated
     */
    onChange?: (...args: any[])=>any;
    /**
     * value of the CurrencyTextField
     */
    value?: string;
    /**
     * default value of the CurrencyTextField
     */
    defaultValue?: string;
    /**
     * Current currency format, currencyFormat will always override config
     */
    currencyFormat?: CurrencyTextFieldCurrencyFormat;
    /**
     * Indicates if CurrencyTextField field is in disabled state
     */
    disabled?: boolean;
    /**
     * Placeholder for the CurrencyTextField
     */
    placeholder?: string;
    /**
     * Supplementary text for CurrencyTextField
     */
    supplementaryText?: CurrencyTextFieldSupplementaryText;
    /**
     * Optional config for custom currency
     */
    config?: CurrencyTextFieldConfig;
    /**
     * Selector to show multiple currencies
     */
    selector?: CurrencyTextFieldSelector;
    /**
     * makes CurrencyTextField read only when true
     */
    readOnly?: boolean;
    /**
     * Ref to access Dom Node
     */
    currencyRef?: CurrencyTextFieldCurrencyRef;
    /**
     * Optional classes can be added
     */
    className?: string;
    /**
     * Name on input element
     */
    name?: string;
    /**
     * Optional maxLength on input element
     */
    maxLength?: number;
    /**
     * To show flag beside label *
     */
    flag?: CurrencyTextFieldFlag;
    /**
     * Optional light background behind input
     */
    withBackground?: boolean;
}

declare const CurrencyTextField: React.FC<CurrencyTextFieldProps>;

export default CurrencyTextField;

