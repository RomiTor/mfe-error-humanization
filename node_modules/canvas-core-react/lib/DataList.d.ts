import * as React from 'react';

export interface DataListError {
    label: string;
    message?: string;
}

export type DataListTooltip = React.ReactNode | Object;

export interface DataListProps {
    /**
     * id on the input element, also used for htmlFor on the label
     */
    id: string;
    /**
     * Label to be associated with the input element (for screenreaders)
     */
    label: string;
    /**
     * Optional classname on the input element
     */
    className?: string;
    /**
     * The DOM nodes (options) to appear within the data list
     */
    children: React.ReactNode;
    /**
     * Optional default value set in the input element, based on the options in the datalist
     */
    defaultValue?: string;
    /**
     * Optional  value set in the input element, based on the options in the datalist
     */
    value?: string;
    /**
     * The name attribute on the input element
     */
    name: string;
    /**
     * Placeholder text for the input element
     */
    placeholder?: string;
    /**
     * Optional secondary label displayed beside the primary label
     */
    secondaryLabel?: string;
    /**
     * shows error state for the datalist component
     */
    error?: DataListError;
    /**
     * Whether or not the text field is disabled
     */
    disabled?: boolean;
    /**
     * onChange function for when the input element is updated
     */
    onChange?: (...args: any[])=>any;
    /**
     * If fieldneeds more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: DataListTooltip;
}

declare const DataList: React.FC<DataListProps>;

export default DataList;

