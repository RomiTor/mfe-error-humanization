import * as React from 'react';

export type DateTextFieldFormat = "DD/MM/YYYY" | "MM/DD/YYYY" | "YYYY/MM/DD" | "YYYY/DD/MM" | "MM/YYYY";

export interface DateTextFieldError {
    label?: string;
    messages?: string[];
}

export type DateTextFieldTooltip = React.ReactNode | Object;

export interface DateTextFieldLabels {
    MM: string;
    DD: string;
    YYYY: string;
}

export interface DateTextFieldPlaceholder {
    MM: string;
    DD: string;
    YYYY: string;
}

export type DateTextFieldInputMode = "none" | "text" | "decimal" | "numeric" | "tel" | "search" | "email" | "url";

export interface DateTextFieldProps {
    /**
     * unique id for DateInput
     */
    id: string;
    /**
     * Optional classes can be added
     */
    className?: string;
    /**
     * date format
     */
    format: DateTextFieldFormat;
    /**
     * Sets the error state and the error messages that will be displayed.
     */
    error?: DateTextFieldError;
    /**
     * Legend to be associated with the fieldset
     */
    legend: string;
    /**
     * Optional secondary legend displayed beside the primary legend
     */
    secondaryLegend?: string;
    /**
     * If field needs more explanation, can include a tooltip node that will appear beside legend
     */
    tooltip?: DateTextFieldTooltip;
    /**
     * default value to start with
     */
    initialValue?: Date;
    /**
     * Fires when the date input is completed
     * @param value: Formatted date string (instance of Date)
     */
    onDateInputComplete?: (...args: any[])=>any;
    /**
     * callback function that fires when user starts typing on the date input
     * @param {string} value : the value on the date input
     * @param {object} event : event object
     */
    onDateInputChange?: (...args: any[])=>any;
    /**
     * label associated with individual date field i.e Month, Day, Year
     */
    labels?: DateTextFieldLabels;
    /**
     * Placeholder when the date input is empty
     */
    placeholder?: DateTextFieldPlaceholder;
    /**
     * Whether or not the date input is disabled
     */
    disabled?: boolean;
    /**
     * Sets the read-only state on the DateInput
     */
    readOnly?: boolean;
    /**
     * Keyboard to show on mobile
     */
    inputMode?: DateTextFieldInputMode;
    /**
     * Optional light background behind input
     */
    withBackground?: boolean;
}

declare const DateTextField: React.FC<DateTextFieldProps>;

export default DateTextField;

