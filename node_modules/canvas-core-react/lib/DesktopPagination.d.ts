import * as React from 'react';

export type DesktopPaginationContainerType = "card" | "border-top" | "none";

export interface DesktopPaginationProps {
    /**
     * Set the id for the underlying nav tag
     */
    id: string;
    /**
     * The total number of results avaliable
     */
    totalResultCount: number;
    /**
     * Callback fired when the page is changed.
     * @param {number} page the new page number
     */
    onChange: (...args: any[])=>any;
    /**
     * Label for the first page button
     */
    firstButtonLabel: string;
    /**
     * Label for the last page button
     */
    lastButtonLabel: string;
    /**
     * Label for the previous page button
     */
    prevButtonLabel: string;
    /**
     * Label for the next page button
     */
    nextButtonLabel: string;
    /**
     * Label for the underlying nav tag
     */
    navigationLabel: string;
    /**
     * optional function for localizing pagination text ,
     * @param {number} start Start index of the visible results
     * @param {number} end End index of the visible results
     * @param {number} totalResultCount The total number of results avaliable
     * @returns {string} Text caption for the pagination, example: 1-20 of 200 results
     */
    localizePaginationText?: (...args: any[])=>any;
    /**
     * The current page.
     */
    currentPage?: number;
    /**
     * Number of results per page
     */
    pageSize?: number;
    /**
     * Number of visible pages
     */
    visiblePages?: number;
    /**
     * Specify the pagination container style
     */
    containerType?: DesktopPaginationContainerType;
    /**
     * Specify an optional className to apply to the underlying nav node
     */
    className?: string;
}

declare const DesktopPagination: React.FC<DesktopPaginationProps>;

export default DesktopPagination;

