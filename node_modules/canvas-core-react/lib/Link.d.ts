import * as React from 'react';

export type LinkComponent = ((...args: any[])=>any) | string | Object;

export type LinkHref = ((...args: any[])=>any) | string | Object;

export type LinkSize = 14 | 16 | 18;

export type LinkType = "default" | "emphasis" | "white";

export type LinkTarget = "_self" | "_blank" | "_parent" | "_top" | "framename" | any;

export type LinkWeight = "regular" | "bold";

export interface LinkProps {
    /**
     * The id for this component
     */
    id?: string;
    /**
     * Link text
     */
    children: React.ReactNode;
    /**
     * Optional / additional class name
     */
    className?: string;
    /**
     * What is rendered as the parent element. Used mostly with react-router-dom Link component
     */
    component?: LinkComponent;
    /**
     * Specifies the URL destination if the link is clicked
     */
    href: LinkHref;
    /**
     * Size of the link text
     */
    size?: LinkSize;
    /**
     * Type of link: default or emphasis
     */
    type?: LinkType;
    /**
     * Presence of this prop adds the external link icon.
     * This text will be read by the screenreader when there is an external icon
     */
    externalIconLabel?: string;
    /**
     * Specifies where to open the linked document
     */
    target?: LinkTarget;
    /**
     * Font weight of the link text
     */
    weight?: LinkWeight;
    /**
     * id on the inner link span. May be needed for some analytics solutions
     */
    spanId?: string;
    /**
     * onClick callback to the link
     */
    onClick?: (...args: any[])=>any;
    /**
     * Accept data-testid for unit testing until Canvas can find a way to reallow all custom props in this component
     */
    "data-testid"?: string;
}

declare const Link: React.FC<LinkProps>;

export default Link;

