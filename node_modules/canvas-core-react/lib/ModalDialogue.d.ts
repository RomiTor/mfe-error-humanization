import * as React from 'react';

export type ModalDialogueWidth = "narrow" | "wide";

export interface ModalDialogueProps {
    /**
     * Text inside of ModalDialogue
     */
    children: React.ReactNode;
    /**
     * Optional classes can be added
     */
    className?: string;
    /**
     * Headline of the Dialogue
     */
    headline: string;
    /**
     * Define the visibility for the Modal
     */
    isModalVisible?: boolean;
    /**
     * Function to be executed when the user clicks outside of the modal to close it (the overlay)
     */
    onOverlayClick?: (...args: any[])=>any;
    /**
     * Primary button label
     */
    primaryButtonLabel: string;
    /**
     * Primary Action
     */
    primaryAction: (...args: any[])=>any;
    /**
     * Secondary button label
     */
    secondaryButtonLabel: string;
    /**
     * Secondary Action
     */
    secondaryAction: (...args: any[])=>any;
    /**
     * Function to change the visibility Modal state
     */
    setModalVisible: (...args: any[])=>any;
    /**
     * Boolean to render two canvas primary buttons. Otherwise, a primary and a secondary button will be rendered
     */
    usePrimaryButtons?: boolean;
    /**
     * Dialog width. can be narrow or wide
     */
    width?: ModalDialogueWidth;
    /**
     * Boolean to always stack buttons. Otherwise, buttons will be automatically stacked at xs screen sizes (default)
     */
    alwaysStackButtons?: boolean;
}

declare const ModalDialogue: React.FC<ModalDialogueProps>;

export default ModalDialogue;

