import * as React from 'react';

export interface PaginatedTableTableProps {
    title: string;
    titleSize?: 18 | 21 | 24;
    highlightOnHover?: boolean;
    translateHeaderLabels?: (...args: any[])=>any;
    columns: {
        name: string;
        headerFormatter?: (...args: any[])=>any;
        selector: string;
        sortable?: boolean;
        sortCompare?: (...args: any[])=>any;
        overrideSortBehaviour?: (...args: any[])=>any;
        initialSortDirection?: any | 0 | 1;
        grow?: number;
        right?: boolean;
        center?: boolean;
        cellFormatter?: (...args: any[])=>any;
        tooltip?: string;
        bodyStyle?: Object;
        headerStyle?: Object;
    }[];
    data: any[];
    resetSortOnDataChange?: boolean;
    columnFixed?: boolean;
    size?: "small" | "large";
    mobileStacked?: {
        primaryKey?: string;
        headingLevel?: "h1" | "h2" | "h3" | "h4" | "h5" | "h6";
        cellFill?: "none" | "alternating" | "all";
    };
    striped?: boolean;
}

export interface PaginatedTableProps {
    /**
     * id for the table
     */
    id: string;
    /**
     * Optional classes can be added
     */
    className?: string;
    /**
     * Label for the first page button
     */
    paginationFirstButtonLabel?: string;
    /**
     * Label for the last page button
     */
    paginationLastButtonLabel?: string;
    /**
     * Label for the previous page button
     */
    paginationPrevButtonLabel?: string;
    /**
     * Label for the next page button
     */
    PaginationNextButtonLabel?: string;
    /**
     * Label for the underlying nav tag
     */
    PaginationNavigationLabel?: string;
    /**
     * Label for the dropfown filter
     */
    filterLabel?: string;
    /**
     * Label for the option (eg. rows)
     */
    filterOptionLabel?: string;
    /**
     * The options for number of rows, type string to accomodate All rows
     */
    filterOptions?: string[];
    /**
     * Button text for mobile pagination
     */
    mobilePaginationButtonText?: string;
    tableProps: PaginatedTableTableProps;
}

declare const PaginatedTable: React.FC<PaginatedTableProps>;

export default PaginatedTable;

