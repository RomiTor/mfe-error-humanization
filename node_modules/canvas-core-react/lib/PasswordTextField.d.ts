import * as React from 'react';

export interface PasswordTextFieldError {
    label?: string;
    messages?: string[];
}

export type PasswordTextFieldInputRef = ((...args: any[])=>any) | Object;

export type PasswordTextFieldTooltip = React.ReactNode | Object;

export interface PasswordTextFieldProps {
    /**
     * Optional / additional class name
     */
    className?: string;
    /**
     * If not null, indicates if input field is in error state
     */
    error?: PasswordTextFieldError;
    /**
     * Forces the component to show the visibility toggle, regardless of if there's text in the input field
     */
    forceVisibilityToggle?: boolean;
    /**
     * Unique id of component
     */
    id: string;
    /**
     * Visiblity can be toggled: if hidden, label announced by the screen reader when focused on the input
     */
    label: string;
    /**
     * Toggle the visibility of the label
     */
    showLabels?: boolean;
    /**
     * Icon on the left of the text field
     * @ignore
     */
    leftIcon?: (...args: any[])=>any;
    /**
     * The name attribute of the input component
     */
    name?: string;
    /**
     * Optional onChange function
     */
    onChange?: (...args: any[])=>any;
    /**
     * Optional callback for text visibility toggle
     */
    onToggleVisibility?: (...args: any[])=>any;
    /**
     * Placeholder when input field is empty. Not to replace label
     */
    placeholder?: string;
    /**
     * Not visible: secondary label announced by the screen reader when focused on the input
     */
    secondaryLabel?: string;
    /**
     * Default value to start with
     */
    value?: string;
    /**
     * Label announced by screenreader when focused on the ShowIcon
     */
    labelShowButton: string;
    /**
     * Label announced by screenreader when focused on the HideIcon
     */
    labelHideButton: string;
    /**
     * Ref to access dom node
     */
    inputRef?: PasswordTextFieldInputRef;
    /**
     * DOM id of password Requirements
     */
    requirementsID?: string;
    /**
     * Whether or not to show the visibility toggle button if there's content
     */
    showVisibilityToggle?: boolean;
    /**
     * Set the password text to be visible or hidden
     */
    textVisible?: boolean;
    /**
     * If field needs more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: PasswordTextFieldTooltip;
    /**
     * Set to true to hide the left icon
     */
    hideIcon?: boolean;
    /**
     * Optional light background behind input
     */
    withBackground?: boolean;
}

declare const PasswordTextField: React.FC<PasswordTextFieldProps>;

export default PasswordTextField;

