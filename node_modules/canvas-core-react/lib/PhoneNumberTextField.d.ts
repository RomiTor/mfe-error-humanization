import * as React from 'react';

export interface PhoneNumberTextFieldError {
    label?: string;
    messages?: string[];
}

export type PhoneNumberTextFieldInputRef = ((...args: any[])=>any) | Object;

export type PhoneNumberTextFieldSupplementaryText = string | React.ReactNode;

export type PhoneNumberTextFieldTooltip = React.ReactNode | Object;

export interface PhoneNumberTextFieldCountryCodeSelector {
    id: string;
    label: string;
    name: string;
    onChange?: (...args: any[])=>any;
}

export interface PhoneNumberTextFieldPhoneNumExtensionInput {
    label: string;
    placeholder: string;
    maxLength?: number;
    onChange?: (...args: any[])=>any;
}

export interface PhoneNumberTextFieldProps {
    /**
     * Optional aria-describedby ids on the input
     */
    ariaDescribedBy?: string;
    /**
     * Optional / additional class name
     */
    className?: string;
    /**
     * Whether or not the text field is disabled
     */
    disabled?: boolean;
    /**
     * Sets the error state and the error messages that will be displayed.
     */
    error?: PhoneNumberTextFieldError;
    /**
     * unique id of component
     */
    id: string;
    /**
     * Ref to access dom node
     */
    inputRef?: PhoneNumberTextFieldInputRef;
    /**
     * Label to be associated with input field
     */
    label: string;
    /**
     * The name attribute of the input component
     */
    name?: string;
    /**
     * Optional onChange function
     * @param {string} value : unformatted value of the textfield
     * @param {object} event : event object of the textfield
     * @param {string} formattedNumber : formatted number
     * @param {string} currentCountryCode : current country phone code
     * @param {string} formattedNumberWithCode : formatted number appended with country code in front
     */
    onChange?: (...args: any[])=>any;
    /**
     * Placeholder when input field is empty. Not to replace label
     */
    placeholder: string;
    /**
     * Sets the read-only state on the TextField
     */
    readOnly?: boolean;
    /**
     * Optional label in lighter font to the right of the main label
     */
    secondaryLabel?: string;
    /**
     * Supplementary text for CurrencyTextField
     */
    supplementaryText?: PhoneNumberTextFieldSupplementaryText;
    /**
     * default value to start with
     */
    value?: string;
    /**
     * If fieldneeds more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: PhoneNumberTextFieldTooltip;
    /**
     * Optional onBlur function
     */
    onBlur?: (...args: any[])=>any;
    /**
     * Country code for formatting
     */
    countryCode?: any;
    /**
     * Selector to choose different country code
     */
    countryCodeSelector?: PhoneNumberTextFieldCountryCodeSelector;
    /**
     * maxLength for phone input. Also, considers the formatted characters i.e: '(', ' ', '-', etc.
     */
    maxLength?: number;
    /**
     * Optional light background behind input
     */
    withBackground?: boolean;
    /**
     * Whether or not the extension field is enabled
     */
    phoneNumExtensionEnabled?: boolean;
    /**
     * Input field to enter phone number extension
     */
    phoneNumExtensionInput?: PhoneNumberTextFieldPhoneNumExtensionInput;
}

declare const PhoneNumberTextField: React.FC<PhoneNumberTextFieldProps>;

export default PhoneNumberTextField;

