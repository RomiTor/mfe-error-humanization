import * as React from 'react';

export type StandaloneLinkComponent = ((...args: any[])=>any) | string | Object;

export type StandaloneLinkHref = ((...args: any[])=>any) | string | Object;

export type StandaloneLinkSize = 16 | 18;

export type StandaloneLinkWeight = "regular" | "bold";

export type StandaloneLinkType = "default" | "white";

export type StandaloneLinkIconPosition = "left" | "right";

export interface StandaloneLinkProps {
    /**
     * What is rendered as the parent element. Used mostly with react-router-dom Link component
     */
    component?: StandaloneLinkComponent;
    /**
     * Link text
     */
    children: React.ReactNode;
    /**
     * Specifies the URL destination if the standalone link is clicked
     */
    href: StandaloneLinkHref;
    /**
     * Size of the standalonelink text
     */
    size?: StandaloneLinkSize;
    /**
     * Font weight of the link text
     */
    weight?: StandaloneLinkWeight;
    /**
     * Optional / additional class name
     */
    className?: string;
    /**
     * Type of standalone link: default or white
     */
    type?: StandaloneLinkType;
    /**
     * Optional target: to open link in new tab or window
     */
    target?: string;
    /**
     * Presence of this prop adds the external link icon.
     * This text will be read by the screenreader when there is an external icon
     */
    externalIconLabel?: string;
    /**
     * id on the inner link span. May be needed for some analytics solutions
     */
    spanId?: string;
    /**
     * position where the icon is relative to the link
     */
    iconPosition?: StandaloneLinkIconPosition;
    /**
     * The icon to be displayed with the link. Defaults to ExternalLink
     */
    Icon?: any;
}

declare const StandaloneLink: React.FC<StandaloneLinkProps>;

export default StandaloneLink;

