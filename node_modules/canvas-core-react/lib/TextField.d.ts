import * as React from 'react';

export interface TextFieldError {
    label?: string;
    messages?: string[];
}

export type TextFieldInputRef = ((...args: any[])=>any) | Object;

export type TextFieldSupplementaryText = string | React.ReactNode;

export type TextFieldTooltip = React.ReactNode | Object;

export type TextFieldIcon = React.ReactNode | Object;

export interface TextFieldProps {
    /**
     * Optional aria-describedby ids on the input
     */
    ariaDescribedBy?: string;
    /**
     * Optional / additional class name
     */
    className?: string;
    /**
     * Default value for an uncontrolled component
     */
    defaultValue?: string;
    /**
     * Whether or not the text field is disabled
     */
    disabled?: boolean;
    /**
     * Sets the error state and the error messages that will be displayed.
     */
    error?: TextFieldError;
    /**
     * unique id of component
     */
    id: string;
    /**
     * Ref to access dom node
     */
    inputRef?: TextFieldInputRef;
    /**
     * Label to be associated with input field
     */
    label: string;
    /**
     * The name attribute of the input component
     */
    name?: string;
    /**
     * Optional onChange function
     */
    onChange?: (...args: any[])=>any;
    /**
     * Placeholder when input field is empty. Not to replace label
     */
    placeholder?: string;
    /**
     * Sets the read-only state on the TextField
     */
    readOnly?: boolean;
    /**
     * Optional label in lighter font to the right of the main label
     */
    secondaryLabel?: string;
    /**
     * Supplementary text for CurrencyTextField
     */
    supplementaryText?: TextFieldSupplementaryText;
    /**
     * The type attribute of the input component
     */
    type?: string;
    /**
     * default value to start with
     */
    value?: string;
    /**
     * If fieldneeds more explanation, can include a tooltip node that will appear beside label
     */
    tooltip?: TextFieldTooltip;
    /**
     * Optional onBlur function
     */
    onBlur?: (...args: any[])=>any;
    /**
     * Optional render prop, useful for adding buttons on the input
     */
    renderProp?: (...args: any[])=>any;
    /**
     * icon for showing in the label
     */
    icon?: TextFieldIcon;
    /**
     * Optional light background behind input
     */
    withBackground?: boolean;
}

declare const TextField: React.FC<TextFieldProps>;

export default TextField;

