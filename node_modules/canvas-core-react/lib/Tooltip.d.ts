import * as React from 'react';

export type TooltipPosition = "bottom" | "top";

export type TooltipIconColor = "black" | "blue";

export type TooltipIconSize = 18 | 24;

export type TooltipRelativeParentRef = ((...args: any[])=>any) | Object;

export interface TooltipProps {
    /**
     * Unique id for tooltip - required for accessibility
     */
    id: string;
    /**
     * Label for close button - visual text for mobile tooltip and screenreader label for desktop tooltip
     */
    closeButtonLabel: string;
    /**
     * Where the tooltip should be positioned relative to the icon button
     */
    position?: TooltipPosition;
    /**
     * Screenreader label for info button - it should be "Info", translated to the appropriate lanaguge
     */
    infoButtonLabel: string;
    /**
     * Text of heading
     */
    heading: string;
    /**
     * Content of tooltip body
     */
    children: React.ReactNode;
    /**
     * Id of root element that the app is attached to. This defaults to the div with id "root" if no option is provided. This is required for accessibility
     */
    rootElementId?: string;
    /**
     * Optional callback for tooltip open event
     */
    onOpen?: (...args: any[])=>any;
    /**
     * Color of the tooltip icon
     */
    iconColor?: TooltipIconColor;
    /**
     * The size of the tooltip icon
     */
    iconSize?: TooltipIconSize;
    /**
     * React ref pointing to container that the tooltip should show within. ie: for "overflow: auto" containers
     */
    relativeParentRef?: TooltipRelativeParentRef;
}

declare const Tooltip: React.FC<TooltipProps>;

export default Tooltip;

